<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chemical Tracker</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      body {
        margin: 0;
        padding: 0;
        font-family: "Nunito", sans-serif;
        background-color: #f0f0f0;
        color: #2c3e50;
        transition: background-color 0.3s ease, color 0.3s ease;
      }

      /* Dark/Black Theme Styles */
      body.dark-theme {
        background-color: #1a1a1a; /* Very dark background */
        color: #f0f0f0; /* Light text for contrast */
      }

      body.dark-theme .navbar {
        background-color: #222222; /* Darker navbar */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        border-bottom: 1px solid #111111;
      }

      body.dark-theme .navbar-logo h1 {
        color: #f0f0f0; /* Light text for titles */
      }

      body.dark-theme .card {
        background-color: #2a2a2a; /* Darker card background */
        box-shadow: 0 5px 9px rgba(0, 0, 0, 0.5);
        border: 1px solid #3a3a3a;
      }

      body.dark-theme .card h2 {
        color: #f0f0f0;
      }

      body.dark-theme .card p {
        color: #bbbbbb; /* Lighter text for card descriptions */
      }

      body.dark-theme .settings-modal {
        background-color: #2a2a2a; /* Darker modal background */
        border: 1px solid #3a3a3a;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.7);
      }

      body.dark-theme .settings-modal .user-details span:first-child {
        color: #f0f0f0; /* Light text for names in dark mode */
      }
      body.dark-theme .settings-modal .user-details span {
        color: #cccccc; /* Slightly lighter grey for emails/subtext */
      }

      body.dark-theme .settings-modal .logout-btn {
        background-color: #a93226; /* Darker red for logout in dark mode */
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);
      }

      body.dark-theme .settings-modal .logout-btn:hover {
        background-color: #8c2a1f;
        box-shadow: 0 4px 7px rgba(0, 0, 0, 0.4);
      }

      body.dark-theme .settings-modal .logout-btn:active {
        background-color: #7a221a;
      }

      body.dark-theme .settings-modal .theme-toggle-container button {
        background-color: #34495e; /* Darker background for theme toggle button */
        color: #f0f0f0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      }

      body.dark-theme .settings-modal .theme-toggle-container button:hover {
        background-color: #2c3e50;
      }

      body.dark-theme .settings-btn {
        color: #f0f0f0; /* Light icon for dark theme settings button */
      }

      body.dark-theme .settings-btn:hover {
        color: #ffffff;
      }

      .navbar {
        background-color: #ffffff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        padding: 1.25rem 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: sticky;
        top: 0;
        z-index: 10;
        border-bottom: 1px solid #e0e0e0;
      }

      .navbar-logo {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .navbar-logo i {
        font-size: 2.25rem;
        color: #3498db;
      }

      .navbar-logo h1 {
        font-size: 1.75rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0;
      }

      .navbar-right {
        position: relative; /* Needed for positioning the modal */
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .settings-btn {
        background: none;
        border: none;
        color: #6c757d; /* Default color for light mode */
        font-size: 1.75rem;
        cursor: pointer;
        outline: none;
        transition: color 0.3s ease, transform 0.1s ease;
        padding: 5px; /* Added padding to make it easier to click */
        border-radius: 50%; /* Rounded background */
      }

      .settings-btn:hover {
        color: #495057;
        transform: scale(1.1);
        background-color: rgba(108, 117, 125, 0.1); /* Light grey hover background */
      }

      /* Settings Modal Styles */
      .settings-modal {
        position: absolute;
        top: calc(100% + 10px); /* Position below the settings button */
        right: 0;
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 0.75rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        padding: 1.5rem;
        min-width: 280px;
        z-index: 100;
        display: none; /* Hidden by default */
        flex-direction: column;
        gap: 1.5rem;
        animation: fadeIn 0.2s ease-out forwards;
      }

      .settings-modal.show {
        display: flex;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .settings-modal .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e0e0e0;
      }

      body.dark-theme .settings-modal .user-info {
        border-bottom: 1px solid #3a3a3a;
      }

      .settings-modal .user-icon {
        width: 3.5rem;
        height: 3.5rem;
        border-radius: 50%;
        background-color: #bdc3c7;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.75rem;
        color: #ffffff;
      }

      .settings-modal .user-details {
        text-align: left;
      }

      .settings-modal .user-details span {
        display: block;
        font-size: 0.875rem;
        color: #555555;
      }

      .settings-modal .user-details span:first-child {
        font-weight: 600;
      }

      .settings-modal .theme-toggle-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-bottom: 1.5rem;
        border-bottom: 1px solid #e0e0e0;
      }

      body.dark-theme .settings-modal .theme-toggle-container {
        border-bottom: 1px solid #3a3a3a;
      }

      .settings-modal .theme-toggle-container span {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
      }

      body.dark-theme .settings-modal .theme-toggle-container span {
        color: #f0f0f0;
      }

      .settings-modal .theme-toggle-container button {
        background-color: #3498db;
        color: #ffffff;
        padding: 0.75rem 1.25rem;
        border-radius: 0.5rem;
        font-size: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease, box-shadow 0.3s ease,
          transform 0.1s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .settings-modal .theme-toggle-container button:hover {
        background-color: #2980b9;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
        transform: translateY(-1px);
      }

      .settings-modal .theme-toggle-container button:active {
        background-color: #2471a3;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        transform: translateY(0);
      }

      .settings-modal .logout-btn {
        background-color: #e74c3c;
        color: #ffffff;
        padding: 0.8rem 1.75rem;
        border-radius: 0.5rem;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: center; /* Center content in button */
        gap: 0.75rem;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease, box-shadow 0.3s ease,
          transform 0.1s ease;
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
        width: 100%; /* Make logout button full width in modal */
      }

      .settings-modal .logout-btn:hover {
        background-color: #c0392b;
        box-shadow: 0 4px 7px rgba(0, 0, 0, 0.15);
        transform: translateY(-1px);
      }

      .settings-modal .logout-btn:active {
        background-color: #a93226;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        transform: translateY(0);
      }

      .main-content {
        padding: 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 3rem;
        min-height: calc(100vh - 6rem);
      }

      .card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 3rem;
        width: 100%;
        max-width: 1100px;
      }

      .card {
        background-color: #ffffff;
        border-radius: 0.75rem;
        padding: 2.25rem;
        box-shadow: 0 5px 9px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        text-align: left;
        border: 1px solid #e0e0e0;
      }

      .card:hover {
        transform: translateY(-0.5rem);
        box-shadow: 0 7px 12px rgba(0, 0, 0, 0.15);
      }

      .card-icon {
        font-size: 4rem;
        color: #3498db;
        margin-bottom: 1.5rem;
      }

      .card h2 {
        font-size: 2rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 1rem;
      }

      .card p {
        font-size: 1.1rem;
        color: #7f8c8d;
        line-height: 1.6;
      }

      @media (max-width: 768px) {
        .navbar {
          flex-direction: column;
          gap: 1rem;
          padding: 1rem; /* Adjust padding for smaller screens */
        }

        .navbar-right {
          flex-direction: column; /* Stack settings button on top */
          align-items: center;
          width: 100%; /* Take full width */
        }

        .settings-modal {
          position: fixed; /* Use fixed for full-screen overlay */
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          border-radius: 0; /* No rounded corners for full screen */
          padding: 2rem;
          justify-content: center;
          align-items: center;
          gap: 2rem;
        }

        .main-content {
          padding: 1.5rem;
        }

        .card-grid {
          grid-template-columns: 1fr;
        }

        .card {
          padding: 1.75rem;
        }
      }
    </style>
  </head>
  <body>
    <nav class="navbar">
      <div class="navbar-logo">
        <i class="fa-solid fa-flask-vial"></i>
        <h1>Chemical Tracker</h1>
      </div>
      <div class="navbar-right">
        <button id="settingsBtn" class="settings-btn">
          <i class="fas fa-cog"></i> <!-- Gear icon for settings -->
        </button>

        <!-- Settings Modal -->
        <div id="settingsModal" class="settings-modal">
          <div class="user-info">
            <div class="user-icon">
              <i class="fa-solid fa-user"></i>
            </div>
            <div class="user-details">
              <span class="user-name" id="user-name-display">Guest</span>
              <span class="user-email" id="user-email-display">-</span>
            </div>
          </div>

          <div class="theme-toggle-container">
            <span>Theme:</span>
            <button id="toggleTheme" class="toggle-btn">
              <i class="fa-solid fa-cloud-sun"></i> <!-- Sun icon for light mode -->
              <span>Light</span>
            </button>
          </div>

          <button class="logout-btn" id="logoutButton">
            <i class="fas fa-sign-out-alt"></i> Logout
          </button>
          <button class="dashboard" onclick="location.href='hero.html'">
            Dashboard
          </button>
        </div>
      </div>
    </nav>

    <main class="main-content">
      <div class="card-grid">
        <div class="card" onclick="location.href='view-chem.html'">
          <i class="fa-solid fa-eye card-icon"></i>
          <h2>View Chemicals</h2>
          <p>Explore the list of available chemicals.</p>
        </div>
        <div class="card" onclick="location.href='items.html'">
          <i class="fa-solid fa-box-open card-icon"></i>
          <h2>Items Inventory</h2>
          <p>Manage and track lab equipment.</p>
        </div>
        <div class="card" onclick="location.href='inventory.html'">
          <i class="fa-solid fa-list-check card-icon"></i>
          <h2>Chemical Inventory Reports</h2>
          <p>View detailed chemical inventory reports.</p>
        </div>
      </div>
    </main>

    <!-- Firebase Scripts -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>

    <script>
      // Your Firebase project configuration
      const firebaseConfig = {
        apiKey: "AIzaSyAq1n2IIwMauj8nj7dEyPSg7wsKVID3AT8",
        authDomain: "chemical-inventory-e0681.firebaseapp.com",
        databaseURL:
          "https://chemical-inventory-e0681-default-rtdb.firebaseio.com",
        projectId: "chemical-inventory-e0681",
        storageBucket: "chemical-inventory-e0681.appspot.com",
        messagingSenderId: "1040891808880",
        appId: "1:1040891808880:web:043585c0cff38d79a338b5",
        measurementId: "G-HTH4QHPK6F",
      };

      // Initialize Firebase
      const app = firebase.initializeApp(firebaseConfig);
      const auth = firebase.auth();
      const db = firebase.firestore();

      // Get references to DOM elements
      const userNameDisplay = document.getElementById('user-name-display');
      const userEmailDisplay = document.getElementById('user-email-display');
      const logoutButton = document.getElementById('logoutButton');
      const toggleThemeBtn = document.getElementById('toggleTheme');
      const dashboardBtn = document.getElementById('dashboard');
      const body = document.body;
      const themeIcon = toggleThemeBtn.querySelector('i');
      const themeText = toggleThemeBtn.querySelector('span'); // Get span for theme text

      // Settings Modal elements
      const settingsBtn = document.getElementById('settingsBtn');
      const settingsModal = document.getElementById('settingsModal');

      // Function to handle logout
      function logout() {
        auth.signOut().then(() => {
          console.log("User logged out successfully.");
          // Redirect to the login page immediately after successful logout
          window.location.href = 'login-a.html';
        }).catch((error) => {
          console.error("Error signing out:", error);
          // You might want to display a user-friendly error message here
        });
      }

      // Attach logout function to the button
      logoutButton.addEventListener('click', logout);

      // --- Theme Toggling Logic ---
      /**
       * Applies the specified theme to the body and updates the theme toggle icon and text.
       * @param {string} theme - The theme to apply ('dark' or 'light').
       */
      function applyTheme(theme) {
          if (theme === 'dark') {
              body.classList.add('dark-theme');
              themeIcon.classList.remove('fa-cloud-sun');
              themeIcon.classList.add('fa-moon'); // Moon icon for dark mode
              themeText.innerText = 'Dark'; // Update text
              localStorage.setItem('theme', 'dark');
          } else {
              body.classList.remove('dark-theme');
              themeIcon.classList.remove('fa-moon');
              themeIcon.classList.add('fa-cloud-sun'); // Sun icon for light mode
              themeText.innerText = 'Light'; // Update text
              localStorage.setItem('theme', 'light');
          }
      }

      // Load saved theme from localStorage or default to system preference/light
      document.addEventListener('DOMContentLoaded', () => {
          const savedTheme = localStorage.getItem('theme');
          if (savedTheme) {
              applyTheme(savedTheme);
          } else {
              // Check system preference
              if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                  applyTheme('dark');
              } else {
                  applyTheme('light'); // Default theme
              }
          }
      });

      // Toggle theme on button click
      toggleThemeBtn.addEventListener('click', function() {
          const currentTheme = localStorage.getItem('theme');
          if (currentTheme === 'dark') {
              applyTheme('light');
          } else {
              applyTheme('dark');
          }
      });
      // --- End Theme Toggling Logic ---

      // --- Settings Modal Toggling Logic ---
      settingsBtn.addEventListener('click', function(event) {
        event.stopPropagation(); // Prevent click from propagating to document
        settingsModal.classList.toggle('show');
      });

      // Hide modal when clicking outside of it
      document.addEventListener('click', function(event) {
        if (!settingsModal.contains(event.target) && !settingsBtn.contains(event.target)) {
          settingsModal.classList.remove('show');
        }
      });
      // --- End Settings Modal Toggling Logic ---


      // --- Authentication State Listener ---
      auth.onAuthStateChanged(user => {
        if (user) {
          // User is signed in. Update UI.
          userNameDisplay.innerText = user.displayName || 'User'; // Display name if available, else 'User'
          userEmailDisplay.innerText = user.email; // Display user email
          console.log("Homepage: User is logged in as:", user.email, "UID:", user.uid);

          // You might want to fetch user-specific data or perform other actions here
          // For now, it just ensures the UI is updated.

        } else {
          // User is signed out. Redirect to the login page.
          console.log("Homepage: No user logged in, redirecting to login-a.html");
          window.location.href = 'login-a.html';
        }
      });
    </script>
    <script
      src="https://kit.fontawesome.com/a076d05399.js"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
